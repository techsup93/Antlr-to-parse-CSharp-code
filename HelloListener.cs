//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Hello.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using AntlrExample;
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="HelloParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IHelloListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.sts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSts([NotNull] HelloParser.StsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.sts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSts([NotNull] HelloParser.StsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.st"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSt([NotNull] HelloParser.StContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.st"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSt([NotNull] HelloParser.StContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.forst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForst([NotNull] HelloParser.ForstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.forst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForst([NotNull] HelloParser.ForstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.iFst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIFst([NotNull] HelloParser.IFstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.iFst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIFst([NotNull] HelloParser.IFstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] HelloParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] HelloParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.ast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAst([NotNull] HelloParser.AstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.ast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAst([NotNull] HelloParser.AstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterE([NotNull] HelloParser.EContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitE([NotNull] HelloParser.EContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterT([NotNull] HelloParser.TContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.t"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitT([NotNull] HelloParser.TContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.f"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterF([NotNull] HelloParser.FContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.f"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitF([NotNull] HelloParser.FContext context);
}
